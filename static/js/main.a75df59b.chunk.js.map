{"version":3,"sources":["images/glyphicons-basic-picture.svg","images/tmdb.svg","components/SearchBox/index.js","services/utils.js","components/MovieList/Movie/index.js","components/MovieList/index.js","components/BackButton/index.js","pages/MovieCard/index.js","pages/MovieView/index.js","App.js","index.js"],"names":["module","exports","SearchBox","className","Grid","verticalAlign","Column","width","Image","src","Logo","alt","size","wrapped","Input","transparent","inverted","onChange","this","props","placeholder","PureComponent","resources","search","cancel","query","a","axios","CancelToken","source","cancelToken","token","res","result","data","results","isCancel","console","log","message","makeRequestCreator","MovieCard","string","limit","item","title","poster_path","vote_average","name","id","to","Card","require","ui","Content","Header","length","trim","substring","Meta","MovieList","list","cards","map","m","i","key","doubling","columns","divided","Row","BackButton","history","useHistory","onClick","e","preventDefault","goBack","Icon","link","backdropIMG","movieId","useParams","useState","movie","setMovie","useEffect","then","catch","err","tagline","genres","release_date","runtime","overview","genresList","g","document","body","style","transition","backgroundImage","Fragment","as","Divider","Description","renderMovie","MovieView","state","movies","loading","value","val","setState","location","getTrending","pathname","push","onChangeHandler","target","renderMovies","Loader","active","horizontal","icon","content","path","exact","render","component","Component","withRouter","App","Container","ReactDOM","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.a75df59b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/glyphicons-basic-picture.7ebd0560.svg\";","module.exports = __webpack_public_path__ + \"static/media/tmdb.27b65cb4.svg\";","import React, { PureComponent } from \"react\";\r\nimport { Input, Image, Grid } from 'semantic-ui-react'\r\nimport './index.css';\r\nimport Logo from '../../images/tmdb.svg'\r\n\r\nclass SearchBox extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={4}>\r\n                        <Image src={Logo} alt=\"Logo\" size='small' wrapped />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={12}>\r\n                        <Input transparent inverted\r\n                            className=\"full-width\"\r\n                            onChange={this.props.onChange}\r\n                            placeholder=\"Search Movie Title...\" />\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBox;\r\n","import axios from \"axios\";\r\n\r\nexport const truncStr = (string, limit) => {\r\n    return string.length > limit\r\n        ? string\r\n            .trim()\r\n            .substring(0, limit - 3)\r\n            .trim() + \"...\"\r\n        : string;\r\n};\r\n\r\nconst resources = {};\r\n\r\nconst makeRequestCreator = () => {\r\n    let cancel;\r\n\r\n    return async query => {\r\n        if (cancel) {\r\n            // Cancel the previous request before making a new request\r\n            cancel.cancel();\r\n        }\r\n        // Create a new CancelToken\r\n        cancel = axios.CancelToken.source();\r\n        try {\r\n            if (resources[query]) {\r\n                // Return result if it exists\r\n                return resources[query];\r\n            }\r\n            const res = await axios(query, { cancelToken: cancel.token });\r\n\r\n            const result = res.data.results;\r\n            // Store response\r\n            resources[query] = result;\r\n\r\n            return result;\r\n        } catch (error) {\r\n            if (axios.isCancel(error)) {\r\n                // Handle if request was cancelled\r\n                console.log(\"Request canceled\", error.message);\r\n            } else {\r\n                // Handle usual errors\r\n                console.log(\"Something went wrong: \", error.message);\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const search = makeRequestCreator();\r\n","import React from \"react\";\r\nimport { Card, Image, Grid } from \"semantic-ui-react\";\r\nimport { truncStr } from \"../../../services/utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './index.css';\r\n\r\nconst MovieCard = props => {\r\n    const { title, poster_path, vote_average, name, id } = props.item;\r\n\r\n    return (\r\n        <Grid.Column className=\"movies\">\r\n            <Link to={`/${id}`}>\r\n                <Card className={poster_path && \"no_image_holder\"}>\r\n                    <Image\r\n                        src={poster_path ? `http://image.tmdb.org/t/p/w185${poster_path}` : require('../../../images/glyphicons-basic-picture.svg')}\r\n                        wrapped\r\n                        ui={false}\r\n                        alt=\"Poster image\"\r\n                    />\r\n                    <Card.Content>\r\n                        <Card.Header>{truncStr(title || name, 19)}</Card.Header>\r\n                        <Card.Meta>{vote_average}</Card.Meta>\r\n                    </Card.Content>\r\n                </Card>\r\n            </Link>\r\n        </Grid.Column>\r\n    );\r\n};\r\n\r\nexport default MovieCard;","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\"\r\nimport Movie from \"./Movie\";\r\n\r\nconst MovieList = ({ list }) => {\r\n    let cards = <h3>Loading...</h3>;\r\n\r\n    if (list) {\r\n        cards = list.map((m, i) => <Movie key={i} item={m} />);\r\n    }\r\n\r\n    return (\r\n        <Grid doubling columns={5} divided='vertically'>\r\n            <Grid.Row >\r\n                {cards}\r\n            </Grid.Row>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default MovieList ;","import React from 'react'\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function BackButton() {\r\n    const history = useHistory();\r\n\r\n    const handleBack = (e) => {\r\n        e.preventDefault();\r\n        history.goBack()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <a\r\n                className=\"back-link\"\r\n                onClick={handleBack}\r\n                title=\"Go back\"\r\n            >\r\n                <Icon link size='large' name='arrow alternate circle left outline' />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Image, Grid, Header, Divider } from \"semantic-ui-react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport BackButton from \"../../components/BackButton\"\r\nimport axios from \"axios\";\r\nimport './index.css';\r\n\r\nlet backdropIMG = '';\r\n\r\nconst MovieCard = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=cfe422613b250f702980a3bbf9e90716`\r\n    ).then(result => {\r\n      setMovie(result.data)\r\n    }).catch(err => console.log(err))\r\n  }, [])\r\n\r\n  const renderMovie = () => {\r\n    const { title, tagline, genres, release_date,\r\n      runtime, overview, poster_path, vote_average, name } = movie;\r\n\r\n    const genresList = genres && genres.map(g => <span key={g.id}>{g.name}</span>)\r\n\r\n    if (poster_path) {\r\n      backdropIMG = 'https://image.tmdb.org/t/p/original' + poster_path;\r\n      document.body.style.transition = 'background-image 0.5s ease-in-out;'\r\n      document.body.style.backgroundImage = 'url(' + backdropIMG + ')'\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={`full-view-card__image ${poster_path && \"no_image_holder\"}`}>\r\n          <Image\r\n            src={poster_path ?\r\n              `http://image.tmdb.org/t/p/w500${poster_path}`\r\n              : require('../../images/glyphicons-basic-picture.svg')\r\n              \r\n            }\r\n            alt=\"Poster image\"\r\n          />\r\n        </div>\r\n\r\n        <Card.Content>\r\n          <Header as=\"h1\">{title || name}</Header>\r\n          <Divider />\r\n          <Card.Meta className=\"tagline\">{tagline}</Card.Meta>\r\n          <Card.Description>\r\n            <p>{overview}</p>\r\n            <div className=\"additional-details\">\r\n              <Grid columns={2}>\r\n                <Grid.Row className=\"release-details\">\r\n                  <Grid.Column>\r\n                    Original Release: <span className=\"meta-data\">{release_date}</span>\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    Running Time: <span className=\"meta-data\">{runtime} mins</span>\r\n                  </Grid.Column>\r\n                  <Grid.Column> Vote Average: <span className=\"meta-data\">{vote_average} / 10</span></Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n              <div className=\"genre-list\">{genresList}</div>\r\n            </div>\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"full-view-card\">\r\n      <BackButton />\r\n      <Card>\r\n        {movie && renderMovie()}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { Component } from 'react';\r\nimport SearchBox from '../../components/SearchBox';\r\nimport Movies from '../../components/MovieList';\r\nimport { search } from \"../../services/utils\";\r\nimport { Loader, Header, Divider } from 'semantic-ui-react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter\r\n} from \"react-router-dom\";\r\n\r\nimport MovieCard from \"../MovieCard\"\r\n\r\nclass MovieView extends Component {\r\n    state = {\r\n        movies: null,\r\n        loading: false,\r\n        value: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTrending()\r\n    }\r\n\r\n    search = val => {\r\n        this.setState({ loading: true });\r\n\r\n        const { location, history } = this.props;\r\n\r\n        if (!val) {\r\n            return this.getTrending();\r\n        }\r\n\r\n        search(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=cfe422613b250f702980a3bbf9e90716&query=${val}`\r\n        ).then(results => {\r\n            if (location.pathname !== '/') {\r\n                history.push(\"/\")\r\n            }\r\n\r\n            this.setState({ movies: results, loading: false });\r\n        })\r\n    };\r\n\r\n    getTrending = () => {\r\n        this.setState({ loading: true });\r\n        search(\r\n            `https://api.themoviedb.org/3/trending/all/week?api_key=cfe422613b250f702980a3bbf9e90716`\r\n        ).then(results => {\r\n            this.setState({ movies: results, loading: false });\r\n        })\r\n    }\r\n\r\n    onChangeHandler = async e => {\r\n        this.search(e.target.value);\r\n        this.setState({ value: e.target.value });\r\n    };\r\n\r\n    renderMovies = () => {\r\n        document.body.style.backgroundImage = \"none\";\r\n\r\n        if (this.state.loading) return <Loader active size='large'>Loading</Loader>\r\n\r\n        let movies = <Divider className=\"white-color\" horizontal>\r\n            <Header as='h3'>There's no movies</Header>\r\n        </Divider>;\r\n\r\n        if (this.state.movies && this.state.movies.length) {\r\n            movies = this.state.value ?\r\n                <Movies list={this.state.movies} />\r\n                : <div>\r\n                    <Divider horizontal><Header className=\"white-color\" as='h2'\r\n                        icon='star'\r\n                        content='Weekly trending' /></Divider>\r\n                    <Movies list={this.state.movies} />\r\n                </div>;\r\n        }\r\n\r\n        return movies;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <SearchBox onChange={this.onChangeHandler} />\r\n                <Switch>\r\n                    <Route path=\"/\" exact render={this.renderMovies} />\r\n                    <Route path=\"/:movieId\" component={MovieCard} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MovieView);\r\n","import React from 'react';\nimport {\n  Container\n} from 'semantic-ui-react'\nimport MovieView from \"./pages/MovieView\";\n\nfunction App() {\n  return (\n    <div className=\"outer-container\">\n      <Container>\n        <MovieView />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport './index.css';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}