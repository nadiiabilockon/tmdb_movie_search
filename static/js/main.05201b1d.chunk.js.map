{"version":3,"sources":["images/glyphicons-basic-picture.svg","images/tmdb.svg","components/MovieCard/index.js","components/SearchBox/index.js","services/utils.js","components/Movies/Movie/index.js","components/Movies/index.js","components/Main/index.js","App.js","index.js"],"names":["module","exports","backdropIMG","SearchBox","props","className","Grid","verticalAlign","Column","width","Image","src","Logo","size","wrapped","Input","transparent","inverted","onChange","placeholder","resources","search","cancel","query","a","axios","CancelToken","source","cancelToken","token","res","result","data","results","isCancel","console","log","message","makeRequestCreator","MovieCard","string","limit","item","title","poster_path","vote_average","name","id","Card","href","process","require","ui","Content","Header","length","trim","substring","Meta","Movies","list","cards","map","m","i","key","doubling","columns","divided","Row","nestedDataToString","nestedData","nestedArray","undefined","forEach","push","join","movieId","useParams","useState","movie","setMovie","history","useHistory","useEffect","then","catch","err","document","body","style","backgroundImage","tagline","genres","release_date","production_companies","runtime","overview","genresList","productionList","onClick","goBack","Icon","link","as","Divider","Description","sub","Main","val","setState","loading","location","getTrending","pathname","movies","onChangeHandler","e","target","value","renderMovies","state","Loader","active","horizontal","icon","content","this","Fragment","path","exact","render","component","NewCard","Component","withRouter","App","Container","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05201b1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/glyphicons-basic-picture.7ebd0560.svg\";","module.exports = __webpack_public_path__ + \"static/media/tmdb.27b65cb4.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Image, Grid, Header, Icon, Divider } from \"semantic-ui-react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './index.css';\r\n\r\nlet backdropIMG;\r\n\r\nconst MovieCard = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=cfe422613b250f702980a3bbf9e90716`\r\n    ).then(result => {\r\n      setMovie(result.data)\r\n    }).catch(err => console.log(err))\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (backdropIMG) document.body.style.backgroundImage = 'url(' + backdropIMG + ')'\r\n  });\r\n\r\n  if (movie) {\r\n    const { title, tagline, genres, release_date, production_companies,\r\n      runtime, overview, poster_path, vote_average, name } = movie;\r\n\r\n    const genresList = nestedDataToString(genres);\r\n    const productionList = nestedDataToString(production_companies);\r\n\r\n    if (poster_path) backdropIMG = 'https://image.tmdb.org/t/p/original' + poster_path;\r\n\r\n    return (\r\n      <div className=\"full-view-card\">\r\n        <div>\r\n          <a\r\n            className=\"back-link\"\r\n            onClick={() => history.goBack()}\r\n            title=\"Go back\"\r\n          >\r\n            <Icon link size='large' name='arrow alternate circle left outline' />\r\n          </a>\r\n        </div>\r\n        <Card>\r\n          <div className={`full-view-card__image ${poster_path ? \"\" : \"no_image_holder\"}`}>\r\n            <Image\r\n              src={poster_path ?\r\n                `http://image.tmdb.org/t/p/w500${poster_path}`\r\n                : require('../../images/glyphicons-basic-picture.svg')\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <Card.Content>\r\n            <Header as=\"h1\">{title || name}</Header>\r\n            <Divider />\r\n            <Card.Meta className=\"tagline\">{tagline}</Card.Meta>\r\n            <Card.Description>\r\n              <p>{overview}</p>\r\n              <div className=\"additional-details\">\r\n                <Header sub className=\"genre-list\">{genresList}</Header>\r\n                <p>{productionList}</p>\r\n                <Grid columns={2}>\r\n                  <Grid.Row className=\"release-details\">\r\n                    <Grid.Column>\r\n                      Original Release: <span className=\"meta-data\">{release_date}</span>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                      Running Time: <span className=\"meta-data\">{runtime} mins</span>\r\n                    </Grid.Column>\r\n                    <Grid.Column> Vote Average: <span className=\"meta-data\">{vote_average} / 10</span></Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </div>\r\n            </Card.Description>\r\n          </Card.Content>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Header as=\"h2\">No info</Header>\r\n  )\r\n}\r\n\r\n\r\nfunction nestedDataToString(nestedData) {\r\n  let nestedArray = [],\r\n    resultString;\r\n  if (nestedData !== undefined) {\r\n    nestedData.forEach(function (item) {\r\n      nestedArray.push(item.name);\r\n    });\r\n  }\r\n  resultString = nestedArray.join(', ');\r\n  return resultString;\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { Input, Image, Grid } from 'semantic-ui-react'\r\nimport './index.css';\r\nimport Logo from '../../images/tmdb.svg'\r\n\r\nconst SearchBox = ((props) => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Grid verticalAlign='middle'>\r\n                <Grid.Column width={4}>\r\n                    <Image src={Logo} size='small' wrapped />\r\n                </Grid.Column>\r\n                <Grid.Column width={12}>\r\n                    <Input transparent inverted\r\n                        className=\"full-width\"\r\n                        onChange={props.onChange}\r\n                        placeholder=\"Search Movie Title...\" />\r\n                </Grid.Column>\r\n            </Grid>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default SearchBox;\r\n","import axios from \"axios\";\r\n\r\nexport const truncStr = (string, limit) => {\r\n    return string.length > limit\r\n        ? string\r\n            .trim()\r\n            .substring(0, limit - 3)\r\n            .trim() + \"...\"\r\n        : string;\r\n};\r\n\r\nconst resources = {};\r\n\r\nconst makeRequestCreator = () => {\r\n    let cancel;\r\n\r\n    return async query => {\r\n        if (cancel) {\r\n            // Cancel the previous request before making a new request\r\n            cancel.cancel();\r\n        }\r\n        // Create a new CancelToken\r\n        cancel = axios.CancelToken.source();\r\n        try {\r\n            if (resources[query]) {\r\n                // Return result if it exists\r\n                return resources[query];\r\n            }\r\n            const res = await axios(query, { cancelToken: cancel.token });\r\n\r\n            const result = res.data.results;\r\n            // Store response\r\n            resources[query] = result;\r\n\r\n            return result;\r\n        } catch (error) {\r\n            if (axios.isCancel(error)) {\r\n                // Handle if request was cancelled\r\n                console.log(\"Request canceled\", error.message);\r\n            } else {\r\n                // Handle usual errors\r\n                console.log(\"Something went wrong: \", error.message);\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const search = makeRequestCreator();\r\n","import React from \"react\";\r\nimport { Card, Image, Grid } from \"semantic-ui-react\";\r\nimport { truncStr } from \"../../../services/utils\";\r\nimport './index.css';\r\n\r\nconst MovieCard = props => {\r\n    const { title, poster_path, vote_average, name, id } = props.item;\r\n\r\n    return (\r\n        <Grid.Column className=\"movies\">\r\n            <Card href={`${process.env.PUBLIC_URL}/${id}`} className={poster_path ? \"\" : \"no_image_holder\"}>\r\n                <Image\r\n                    src={poster_path ? `http://image.tmdb.org/t/p/w185${poster_path}` : require('../../../images/glyphicons-basic-picture.svg')}\r\n                    wrapped\r\n                    ui={false}\r\n                />\r\n                <Card.Content>\r\n                    <Card.Header>{truncStr(title || name, 19)}</Card.Header>\r\n                    <Card.Meta>{vote_average}</Card.Meta>\r\n                </Card.Content>\r\n            </Card>\r\n        </Grid.Column>\r\n    );\r\n};\r\n\r\nexport default MovieCard;","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\"\r\nimport Movie from \"./Movie\";\r\n\r\nconst Movies = ({ list }) => {\r\n    let cards = <h3>Loading...</h3>;\r\n\r\n    if (list) {\r\n        cards = list.map((m, i) => <Movie key={i} item={m} />);\r\n    }\r\n\r\n    return (\r\n        <Grid doubling columns={5} divided='vertically'>\r\n            <Grid.Row >\r\n                {cards}\r\n            </Grid.Row>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Movies;","import React, { Component } from 'react';\r\nimport SearchBox from '../SearchBox';\r\nimport Movies from '../Movies';\r\nimport { search } from \"../../services/utils\";\r\nimport { Loader, Header, Divider } from 'semantic-ui-react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter\r\n} from \"react-router-dom\";\r\n\r\nimport NewCard from \"../MovieCard\"\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            movies: null,\r\n            loading: false,\r\n            value: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTrending()\r\n    }\r\n\r\n    search = val => {\r\n        this.setState({ loading: true });\r\n\r\n        const { location, history } = this.props;\r\n\r\n        if (!val) {\r\n            return this.getTrending();\r\n        }\r\n\r\n        search(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=cfe422613b250f702980a3bbf9e90716&query=${val}`\r\n        ).then(results => {\r\n            if (location.pathname !== process.env.PUBLIC_URL + '/') {\r\n                history.push(process.env.PUBLIC_URL + '/')\r\n            }\r\n\r\n            this.setState({ movies: results, loading: false });\r\n        })\r\n    };\r\n\r\n    getTrending = () => {\r\n        this.setState({ loading: true });\r\n        search(\r\n            `https://api.themoviedb.org/3/trending/all/week?api_key=cfe422613b250f702980a3bbf9e90716`\r\n        ).then(results => {\r\n            this.setState({ movies: results, loading: false });\r\n        })\r\n    }\r\n\r\n    onChangeHandler = async e => {\r\n        this.search(e.target.value);\r\n        this.setState({ value: e.target.value });\r\n    };\r\n\r\n    renderMovies = () => {\r\n        if (this.state.loading) return <Loader active size='large'>Loading</Loader>\r\n\r\n        let movies = <Divider className=\"white-color\" horizontal>\r\n            <Header as='h3'>There's no movies</Header>\r\n        </Divider>;\r\n\r\n        if (this.state.movies && this.state.movies.length) {\r\n            movies = this.state.value ?\r\n                <Movies list={this.state.movies} />\r\n                : <div>\r\n                    <Divider horizontal><Header className=\"white-color\" as='h2'\r\n                        icon='star'\r\n                        content='Weekly trending' /></Divider>\r\n                    <Movies list={this.state.movies} />\r\n                </div>;\r\n        }\r\n\r\n        return movies;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <SearchBox onChange={this.onChangeHandler} />\r\n                <Switch>\r\n                    <Route path={process.env.PUBLIC_URL + '/'} exact render={this.renderMovies} />\r\n                    <Route path={process.env.PUBLIC_URL + '/:movieId/'} component={NewCard} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Main);\r\n","import React from 'react';\nimport {\n  Container\n} from 'semantic-ui-react'\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"outer-container\">\n      <Container>\n        <Main />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport './index.css';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}